# Example episode structure, copy one of these for every episode you want to track
# Episode variable name, used to select which episodes to process below, just make sure it's unique per episode and you should be good
bfb19 = {
    # doesn't necessarily need to be a number, just something unique to identify the episode, this is used when setting the filenames of graph and graph2 files
    "epnumber": "19",
    # these filenames can be anything, technically they don't even need to be in a folder, but i recommend using a consistent organisation format
    # this is where the program inputs its data from, its the savestate.json from bracketcounter
    "savestateFilename": "savestate/savestate-bfb19-final.json",
    # This file is not created by you but it is where processor.py saves its output. It should be different to savestate. It should end with msgp (unless you need json for your application, see readme)
    "dataFilename": "votes/votes-19-final.msgp",
    # this maps voting letters on the left with names on the right. there should always be a translation for any valid letter or it will be thrown away
    "translation": {
        "a": "Bubble",
        "b": "Gelatin",
        "c": "Leafy",
        "d": "Lollipop",
        "e": "Ruby",
        "f": "Teardrop",
    },
    # these colors are in hex format (google it), you need to specify a color per character
    "color": {
        "a": "#86edfe",
        "b": "#12d70d",
        "c": "#70f31c",
        "d": "#b669f3",
        "e": "#fd1850",
        "f": "#1fbce9",
    },
    # this detail is only used in data-alleps.py to select a color for a given episode's line
    "loser": "e",
}


# This is only necessary if you want to use data-alleps.py, it should be a complete list of all variable names for each episode, eg [bfb19, bfb20] and so on
episodes = [bfb19]

# ep1 is used with the sankey.py voter switching comparison tool, if you use that these should be different
ep1 = bfb19
# ep2 is usually the one you want to change, this is used in data.py
ep2 = bfb19

## Script configuration ##
# For allvoters.py - output the users who voted on (True=all, False=any) of the episodes in the episodes array
supes = True

# For sankey.py
# proportional tries to adjust the graph to account for the changes in size of the voterbase.
proportional = False
# nMode selects if "Didn't vote" blocks should be included
nMode = False
# vMode selects if votes should be only processed from the vlist file generated by allvoters.py
vMode = True